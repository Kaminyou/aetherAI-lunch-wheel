{"version":3,"sources":["logo.svg","components/wheel.js","App.js","reportWebVitals.js","index.js"],"names":["Wheel","useState","listName","restaurantData","setRestaurantData","candidateList","setCandidateList","useEffect","axios","get","then","res","data","catch","error","console","candidateTemp","forEach","element","push","getCandidate","log","length","className","segments","segColors","onFinished","winner","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,4CCqEAA,MAjEf,WAAkB,IAAD,EAEmBC,mBAAS,WAF5B,mBAENC,EAFM,aAG+BD,mBAAS,KAHxC,mBAGNE,EAHM,KAGUC,EAHV,OAI6BH,mBAAS,IAJtC,mBAINI,EAJM,KAISC,EAJT,KA2Cb,OAbAC,qBAAU,WAvBNC,IAAMC,IAAI,wFACTC,MAAK,SAACC,GACHP,EAAkBO,EAAIC,SAEzBC,OACG,SAACC,GAAYC,QAAQD,MAAMA,QAoBhC,IAEHP,qBAAU,YAlBW,WACjB,IAAIS,EAAgB,GACpBb,EAAec,SAAQ,SAAAC,GACfhB,KAAYgB,GACc,KAAtBA,EAAQhB,IAAkBc,EAAcG,KAAKD,EAAQhB,OAGjEI,EAAiBU,GAYjBI,GACAL,QAAQM,IAAIhB,KACb,CAACF,IAOAE,EAAciB,OAAS,EACvB,qBAAKC,UAAU,eAAf,SACI,cAAC,IAAD,CACIC,SAAUnB,EACVoB,UATS,CAAE,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,WAQtBC,WAAY,SAACC,GAAD,OAvBL,SAACA,GAChBZ,QAAQM,IAAIM,GAsBoBD,CAAWC,IACnCC,aAAa,QACbC,cAAc,QACdC,WAAW,OACXC,YAAY,EACZC,KAAM,IACNC,WAAY,IACZC,aAAc,IACdC,WAAW,YAGd,uCCjDEC,MAXf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sDACA,cAAC,EAAD,UCGOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.19589eb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport WheelComponent from 'react-wheel-of-prizes'\nimport axios from 'axios';\n\nfunction Wheel() {\n\n    const [listName, setListName] = useState(\"general\");\n    const [restaurantData, setRestaurantData] = useState([]);\n    const [candidateList, setCandidateList] = useState([]);\n\n    const getRestaurant = () => {\n        axios.get('https://opensheet.vercel.app/1wqfGJb1KAiTt2mhr2oQkfBbfiQrAJapH8BXQ196YZgo/restaurant')\n        .then((res) => { \n            setRestaurantData(res.data);\n        })\n        .catch(\n            (error) => { console.error(error) }\n        )\n    }\n\n    const getCandidate = () => {\n        let candidateTemp = [];\n        restaurantData.forEach(element => {\n            if (listName in element){\n                if (element[listName] !== '') candidateTemp.push(element[listName]);\n            }\n        });\n        setCandidateList(candidateTemp);\n    }\n\n    const onFinished = (winner) => {\n        console.log(winner)\n      }\n\n    useEffect(() => {\n        getRestaurant();\n    }, []);\n\n    useEffect(() => {\n        getCandidate();\n        console.log(candidateList)\n    }, [restaurantData]);\n\n    const colorPalette = [ \"#ff9900\", \"#b36b00\", \"#ffe6bf\", \"#ffcc80\", \"#00b366\", \n                           \"#007d48\", \"#bfffe4\", \"#80ffc9\", \"#400099\", \"#2d006b\", \n                           \"#dabfff\", \"#b580ff\" ]\n\n    return (\n        candidateList.length > 0 ?(\n        <div className='wheelwrapper'>\n            <WheelComponent\n                segments={candidateList}\n                segColors={colorPalette}\n                onFinished={(winner) => onFinished(winner)}\n                primaryColor='black'\n                contrastColor='white'\n                buttonText='Spin'\n                isOnlyOnce={false}\n                size={200}\n                upDuration={100}\n                downDuration={1000}\n                fontFamily='Arial'\n                />\n        </ div>\n        ) : (<p>Error</p>)\n    );\n\n}\n\nexport default Wheel;","import logo from './logo.svg';\nimport './App.css';\nimport Wheel from './components/wheel'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>aetherAI Lunch Wheel</h1>\n        <Wheel />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}